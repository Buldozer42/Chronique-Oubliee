{% extends 'base.html.twig' %}
{% block body %}
{% include 'navbar.html.twig' %}
<div class="container"> 
    <h1>Générateur de rencontre</h1>
    <div class="col-md-6">
        {{ form_start(form, {'attr': {'id': 'entity-search-form', 'class': 'd-flex'}}) }}

        {{ form_widget(form.search, {'attr': {'class': 'form-control me-2'}}) }}
        {{ form_widget(form.nb, {'attr': {'style': 'width: 3.5rem'}}) }}
        
        {{ form_widget(form.entity_id) }}
        {{ form_widget(form.entity_type) }}     
        
        {{ form_rest(form) }}
            <button type="submit" class="btn btn-primary mx-2">Ajouter</button>
            <a href="{{ path('encounter_add_pj')}}"><button type="button" class="btn btn-primary">PJ</button></a>
            <!-- Modal trigger button -->
            <button type="button" class="btn btn-primary mx-2" data-bs-toggle="modal" data-bs-target="#modalNotepad">
                Note
            </button>
           <a href="{{ path('encounter_clear')}}"><button type="button" class="btn btn-danger">Nettoyer</button></a>
        {{ form_end(form) }}
        {# {% if round != 0  and init != 0 %} #}
        <div class="d-flex ps-2 mt-3">
            <h4 class="">Tour actuel : {{ round }}</h4>
            {# <a href="{{ path('encounter_next_round')}}"><button type="button" class="btn btn-sm btn-primary ms-2">Suivant</button></a> #}

            <h4 class="ms-2">Initiative actuel : {{ init }}</h4>
            <a href="{{ path('encounter_next_init')}}"><button type="button" class="btn btn-sm btn-primary ms-2">Suivant</button></a>
            <a href="{{ path('encounter_reset_round_and_init')}}"><button type="button" class="btn btn-sm btn-primary ms-2">Reset</button></a>
        </div>
        {# {% endif %} #}
    </div>
</div>
<!-- Modal Note -->
<div class="modal fade" id="modalNotepad" tabindex="-1" role="dialog" aria-labelledby="modalTitleId" aria-hidden="true">
  <div class="modal-dialog modal-dialog-scrollable modal-dialog-centered" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="modalTitleId">Bloc-notes </h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
          <label for="note" class="form-label">Voici un bloc-notes</label>
          <textarea class="form-control" name="note" id="note" rows="3"></textarea>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
        <button type="button" class="btn btn-primary save-note">Save</button>
      </div>
    </div>
  </div>
</div>

<!-- Modal Sheet -->
<div class="modal fade" id="modalSheet" tabindex="-1" role="dialog" aria-labelledby="modalTitleId" aria-hidden="true">
  <div class="modal-dialog modal-dialog-scrollable modal-dialog-centered modal-xl" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="modalTitleId"></h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
      </div>
      <div class="modal-footer">
      </div>
    </div>
  </div>
</div>

<div class="container">
    <div class="row mt-4">
        {% for entity in entities %}
        <div class="col-4 mb-4">
          <div class="{{'card entity' ~ (loop.index - 1) }}"
          {% if entity.init == init %}
            style="background: #9de0ad;"
          {% endif %}
          >
            <div class="card-body">
              <div class="d-flex align-items-center">
                {% if entity|class_name == "Player" %}
                    <span class="material-symbols-outlined mb-1">person</span>
                {% else %}
                    <span class="material-symbols-outlined mb-1">pets</span>
                {% endif %}
                <h3 class="card-title entity-name"> {{ entity.name }} </h3>
                <div class="dropdown open">
                  <button class="btn btn-sm btn-secondary dropdown-toggle ms-2" type="button" id="triggerId" data-bs-toggle="dropdown" aria-haspopup="true"
                      aria-expanded="false" data-entity-num="{{ loop.index - 1 }}"></button>
                  <div class="dropdown-menu" aria-labelledby="triggerId">
                    <a class="dropdown-item d-flex" title="d12 pour tous les tests au lieu du d20"
                    href="{{ path('set_detrimental_state', {'num': (loop.index - 1), 'state': 'weakened'}) }}">
                        <img src="{{ asset('svg/weakened.svg') }}" alt="weakened" width="20" height="20">
                        <span>Affaibli</span>
                    </a>
                    <a class="dropdown-item d-flex" title="Init. -5, Att. contact -5, DEF -5, Att. dist. -10"
                    href="{{ path('set_detrimental_state', {'num': (loop.index - 1), 'state': 'blind'}) }}">
                        <img src="{{ asset('svg/blind.svg') }}" alt="blind" width="20" height="20">
                        <span>Aveuglé</span>
                    </a>
                    <a class="dropdown-item d-flex" title="Aucune action possible, DEF -5"
                    href="{{ path('set_detrimental_state', {'num': (loop.index - 1), 'state': 'stun'}) }}">
                        <img src="{{ asset('svg/stun.svg') }}" alt="stun" width="20" height="20">
                        <span>Étourdi</span>
                    </a>
                    <a class="dropdown-item d-flex" title="d12 pour tous les tests au lieu du d20, pas de déplacement"
                    href="{{ path('set_detrimental_state', {'num': (loop.index - 1), 'state': 'immobilized'}) }}">
                        <img src="{{ asset('svg/immobilized.svg') }}" alt="immobilized" width="20" height="20">
                        <span>Immobilisé</span>
                    </a>
                    <a class="dropdown-item d-flex" title="Aucune action possible, en cas d’attaque : touché automatiquement et subit un coup critique"
                    href="{{ path('set_detrimental_state', {'num': (loop.index - 1), 'state': 'paralyzed'}) }}">
                        <img src="{{ asset('svg/paralyzed.svg') }}" alt="paralyzed" width="20" height="20">
                        <span>Paralysé</span>
                    </a>
                    <a class="dropdown-item d-flex" title="Une seule action par tour (action d’attaque ou de mouvement)"
                    href="{{ path('set_detrimental_state', {'num': (loop.index - 1), 'state': 'slow'}) }}">
                        <img src="{{ asset('svg/slow.svg') }}" alt="slow" width="20" height="20">
                        <span>Ralenti</span>
                    </a>
                    <a class="dropdown-item d-flex" title="Att. -5, DEF -5, nécessite une action de mouvement pour se relever"
                    href="{{ path('set_detrimental_state', {'num': (loop.index - 1), 'state': 'reversed'}) }}">
                        <img src="{{ asset('svg/reversed.svg') }}" alt="reversed" width="20" height="20">
                        <span>Renversé</span>
                    </a>
                    <a class="dropdown-item d-flex" title="Pas d’action, DEF -5 au 1er tour de combat"
                    href="{{ path('set_detrimental_state', {'num': (loop.index - 1), 'state': 'surprised'}) }}">
                        <img src="{{ asset('svg/surprised.svg') }}" alt="surprised" width="20" height="20">
                        <span>Surpris</span>
                    </a>
                    <div class="detrimental-state-form px-2" title="">
                    </div>
                  </div>
                </div>
                {% for detrimental_state in entity.getDetrimentalStates %}
                        <div class="detrimental-state ms-1">
                            <img src="{{ asset('svg/' ~ detrimental_state.name ~ '.svg') }}" alt="{{ detrimental_state.name }}" width="20" height="20"
                                title="{{ detrimental_state.description }}">
                        </div>
                {% endfor %}
              </div>
              <div class="d-flex">
                <span class="material-symbols-outlined">security</span>
                <p class="card-text me-3">Def : {{ entity.def }}</p>
                <span class="material-symbols-outlined">sprint</span>
                <p class="card-text me-3">Init : {{ entity.init }}</p>
                {% if entity|class_name == "Player" %}
                    <span class="material-symbols-outlined">swords</span>
                    <p class="card-text me-3">: {{ entity.getAttCon }}</p>
                    <img src="{{ asset('svg/bow.svg') }}" alt="bow" width="20" height="20">
                    <p class="card-text me-3">: {{ entity.getAttDis }}</p>
                    {% if entity.getModMag != 0 %}
                        <span class="material-symbols-outlined">menu_book</span>
                        <p class="card-text">: {{ entity.getAttMag }}</p>
                    {% endif %}
                {% else %}
                    <span class="material-symbols-outlined">shield_lock</span>
                    <p class="card-text">: {{ entity.rd }}/{{entity.getRdComment}}</p>
                {% endif %}
              </div>
              <div class="d-flex d-flex justify-content-between">
                  <button class="btn btn-danger btn-sm damage" data-entity-num="{{ loop.index - 1 }}">-</button>
                  <div class="col-9 text-center border border-2 rounded health-bar">
                      <p class="health">{{ entity.hp }}/{{ entity.getMaxHp }}</p>
                  </div>
                  <button class="btn btn-success btn-sm heal" data-entity-num="{{ loop.index - 1 }}">+</button>
              </div>
              {% if entity|class_name == "Player" %}
                {% if entity.getMaxPm != 0 %}
                <div class="d-flex d-flex justify-content-between mt-2">
                    <button class="btn btn-danger btn-sm remove-mana" data-entity-num="{{ loop.index - 1 }}">-</button>
                    <div class="col-9 text-center border border-2 rounded mana-bar">
                        <p class="mana">{{ entity.pm }}/{{ entity.getMaxPm }}</p>
                    </div>
                    <button class="btn btn-success btn-sm add-mana" data-entity-num="{{ loop.index - 1 }}">+</button>
                </div>
                {% endif %}
              {% endif %}
              <div>
                {% if entity|class_name == "Player" %}
                    {% set weapons = json_decode(entity.getWeapons, true) %}
                    
                    {% if weapons.weapon1.name != "" %}
                    <p class="card-text mb-0">
                        <strong>{{ weapons.weapon1.name }}</strong>
                        +{{ weapons.weapon1.att }}
                        <strong>Dm</strong>
                        {{ weapons.weapon1.dm }}
                        {{ weapons.weapon1.special|default('') }}
                    </p>
                    {% endif %}
                    {% if weapons.weapon2.name != "" %}
                    <p class="card-text mb-0">
                        <strong>{{ weapons.weapon2.name }}</strong>
                        +{{ weapons.weapon2.att }}
                        <strong>Dm</strong>
                        {{ weapons.weapon2.dm }}
                        {{ weapons.weapon2.special|default('') }}
                    </p>
                    {% endif %}
                    {% if weapons.weapon3.name != "" %}
                    <p class="card-text mb-0">
                        <strong>{{ weapons.weapon3.name }}</strong>
                        +{{ weapons.weapon3.att }}
                        <strong>Dm</strong>
                        {{ weapons.weapon3.dm }}
                        {{ weapons.weapon3.special|default('') }}
                    </p>
                    {% endif %}
                {% else %}
                    {% for attack in entity.attacks %}
                        <p class="card-text mb-0">
                            <strong>{{ attack.name }}</strong>
                            +{{ attack.bonus }}
                            <strong>Dm</strong>
                            {{ attack.dm }}
                        </p>
                    {% endfor %}
                {% endif %}
                <div class="manage-hp mt-2">
                </div>
                <div class="manage-pm mt-2">
                </div>
              </div>
            </div>
            <div class="card-footer">
              <div class="d-grid gap-2 my-1">
                <div class="d-flex">
                    <a class="btn btn-primary flex-fill mx-1 add-hp" data-entity-num="{{ loop.index - 1 }}">Ajouter</a>
                    <a class="btn btn-primary flex-fill mx-1 modify-hp" data-entity-num="{{ loop.index - 1 }}">Modifer</a>
                    <a class="btn btn-primary flex-fill mx-1 substract-hp" data-entity-num="{{ loop.index - 1 }}">Enlever</a>
                </div>
                {% if entity|class_name == "Player" %}
                    {% if entity.getModMag != 0 %}
                        <a class="btn btn-primary modif-pm" data-mana-entity-num="{{ loop.index - 1 }}">Modifer les PM</a>
                    {% endif %}
                    <button type="button" class="btn btn-primary modalSheetBtn" data-bs-toggle="modal" data-bs-target="#modalSheet" 
                    data-entity-type="player" data-entity-id="{{ entity.id }}">
                        Voir
                    </button>
                {% else %}
                    <button type="button" class="btn btn-primary modalSheetBtn" data-bs-toggle="modal" data-bs-target="#modalSheet" 
                    data-entity-type="creature" data-entity-id="{{ entity.id }}">
                        Voir
                    </button>
                {% endif %}
              </div>
              <div class="d-grid gap-2 my-1">
                <a href={{ path('encountersgenerator_remove', {'name': entity.name}) }} class="btn btn-danger">Enlever</a>
              </div>
            </div>
          </div>
        </div>
        {% endfor %}
    </div>
    <div>
    </div>
</div>
<style>
    .health-bar {
      background: green;
    }
    .mana-bar {
      background: blue;
    }
</style>
<script>
    $(function() {
        $("#entity_search_search").autocomplete({
            source: "{{ path('entity_search_ajax') }}",
            minLength: 2,
            delay: 100,
            select: function(event, ui) {
                event.preventDefault();
                $("#entity_search_search").val(ui.item.label);
                $("#entity_search_entity_id").val(ui.item.id);
                $("#entity_search_entity_type").val(ui.item.type);
            },
        }).autocomplete("instance")._renderItem = function(ul, item) {
            return $("<li>")
                .append('<div>' + item.label + '</div>')
                .appendTo(ul);
        };
    });
    function updateHealthBar(health_bar, percent) {
        let card = health_bar.parent().parent();
        let damage = card.find('.damage');
        if (percent <= 0) {
            card.css("background", "lightgray");
            health_bar.css("background", "lightgray");
            damage.prop('disabled', true);
        }
        else if (percent <= 25) {
            card.css("background", "white");
            health_bar.css("background", "linear-gradient(90deg, red "+ percent + "%, white " + percent + "%)");
            damage.prop('disabled', false);
        } else if (percent <= 50) {
            card.css("background", "white");
            health_bar.css("background", "linear-gradient(90deg, orange "+ percent + "%, white " + percent + "%)");
            damage.prop('disabled', false);
        } else  {
            card.css("background", "white");
            health_bar.css("background", "linear-gradient(90deg, green "+ percent + "%, white " + percent + "%)");
            damage.prop('disabled', false);
        }
    }

    function manageHp(num, nb_hp, type){
        let health = $(".entity"+num).find('.health');
        let health_bar = $(".entity"+num).find('.health-bar');
        let base_url = "";
        if (type == "add") {
            base_url = "{{ url('add_hp', {'num': 'tmp', 'nb' : 'pmt'}) }}";
        } else {
            base_url = "{{ url('subtract_hp', {'num': 'tmp', 'nb' : 'pmt'}) }}";
        }
        $.ajax({
            type: "POST",
            url: base_url.replace("tmp", num).replace("pmt", nb_hp),
            success: function(data) {
                health.text(data.hp + "/" + data.maxHp);
                let percent = data.hp / data.maxHp * 100;
                updateHealthBar(health_bar, percent);
            },
            error: function(jqXHR, textStatus, errorThrown) {
                alert("Erreur lors de la soustraction d'HP : " + errorThrown);
            }
        });
    }
    function updateManaBar(mana_bar, percent) {
        let card = mana_bar.parent().parent();
        let damage = card.find('.remove-mana');
        if (percent <= 0) {
            mana_bar.css("background", "lightgray");
            damage.prop('disabled', true);
        }
        else if (percent <= 25) {
            card.css("background", "white");
            mana_bar.css("background", "linear-gradient(90deg, #00CBFF "+ percent + "%, white " + percent + "%)");
            damage.prop('disabled', false);
        } else if (percent <= 50) {
            card.css("background", "white");
            mana_bar.css("background", "linear-gradient(90deg, #008EFF "+ percent + "%, white " + percent + "%)");
            damage.prop('disabled', false);
        } else  {
            card.css("background", "white");
            mana_bar.css("background", "linear-gradient(90deg, blue "+ percent + "%, white " + percent + "%)");
            damage.prop('disabled', false);
        }
    }

    function managePm(num, nb_pm, type){
        let mana = $(".entity"+num).find('.mana');
        let mana_bar = $(".entity"+num).find('.mana-bar');
        let base_url = "";
        if (type == "add") {
            base_url = "{{ url('add_pm', {'num': 'tmp', 'nb' : 'pmt'}) }}";
        } else {
            base_url = "{{ url('subtract_pm', {'num': 'tmp', 'nb' : 'pmt'}) }}";
        }
        $.ajax({
            type: "POST",
            url: base_url.replace("tmp", num).replace("pmt", nb_pm),
            success: function(data) {
                mana.text(data.pm + "/" + data.maxPm);
                let percent = data.pm / data.maxPm * 100;
                updateManaBar(mana_bar, percent);
            },
            error: function(jqXHR, textStatus, errorThrown) {
                alert("Erreur lors de la soustraction de PM : " + errorThrown);
            }
        });
    }

    function changeHp(num, request_type_value){
        const entity_num = document.querySelectorAll(".entity-num")[num];
        const request_type = document.querySelectorAll(".request-type")[num];
        entity_num.value = num;
        if (request_type_value == "modify") {
            const entity_hp = document.querySelectorAll(".entity-hp")[num];
            entity_hp.value = $(".entity"+num).find(".health").text().split("/")[0];
        }
        request_type.value = request_type_value;
        $(".entity"+num).find(".manage-hp").toggle();
        $(".entity"+num).find(".manage-pm").hide();
        $(".entity"+num).find(".detrimental-state-form").hide();
    }

    $(document).ready(function() {
        $(".manage-hp").hide();
        var hpFormHtml = `
            {{ form_start(hpForm) }}
            {{ form_widget(hpForm.entity_hp) }}
            {{ form_widget(hpForm.entity_num) }}
            {{ form_widget(hpForm.request_type) }}
            
            {{ form_rest(hpForm) }}
                <div class="d-grid gap-2 my-1">
                    <button type="btn" class="btn btn-primary mt-2">Modifier</button>
                </div>
            {{ form_end(hpForm) }}
        `;
        $(".manage-hp").html(hpFormHtml);

        $(".add-hp").click(function() {
            changeHp($(this).data("entity-num"), "add");
        });

        $(".modify-hp").click(function() {
            changeHp($(this).data("entity-num"), "modify");
        });

        $(".substract-hp").click(function() {
            changeHp($(this).data("entity-num"), "substract");
        });

        $(".manage-pm").hide();
        var pmFormHtml = `
            {{ form_start(pmForm) }}
            {{ form_widget(pmForm.entity_pm) }}
            {{ form_widget(pmForm.entity_num) }}
            
            {{ form_rest(pmForm) }}
                <div class="d-grid gap-2 my-1">
                    <button type="submit" class="btn btn-primary mt-2">Modifier</button>
                </div>
            {{ form_end(pmForm) }}
        `;
        $(".manage-pm").html(pmFormHtml);

        $(".modif-pm").click(function() {
            let num = $(this).data("mana-entity-num");
            const mana_entity_num = document.querySelectorAll(".mana-entity-num")[num];
            const entity_pm = document.querySelectorAll(".entity-pm")[num];
            mana_entity_num.value = num;
            entity_pm.value = $(".entity"+num).find(".mana").text().split("/")[0];
            $(".entity"+num).find(".manage-pm").toggle();
            $(".entity"+num).find(".manage-hp").hide();
            $(".entity"+num).find(".detrimental-state-form").hide();
        });

        var detrimentalFormHtml = `
            {{ form_start(detrimentalform) }}
            {{ form_widget(detrimentalform.description) }}
            {{ form_widget(detrimentalform.entity_num) }}
            {{ form_rest(detrimentalform) }}
                <div class="d-grid gap-2 my-1">
                    <button type="submit" class="btn btn-primary detrimental-btn mt-2">Modifier</button>
                </div>
            {{ form_end(detrimentalform) }}
        `;
        $(".detrimental-state-form").html(detrimentalFormHtml);
        $(".dropdown-toggle").click(function() {
            let num = $(this).data("entity-num");
            const entity_num = document.querySelectorAll(".detrimental-entity-num")[num];
            entity_num.value = num;
        });
        $(".detrimental-btn").click(function() {
            console.log("test");
            let num = $(this).data("entity-num");
        });
        
        $(".damage").each(function() {
            let num = $(this).data("entity-num");
            let health = $(".entity"+num).find('.health');
            let health_bar = $(".entity"+num).find('.health-bar');
            let percent = health.text().split("/")[0] / health.text().split("/")[1] * 100;
            updateHealthBar(health_bar, percent);
        });

        $(".damage").click(function() {
            let num = $(this).data("entity-num");
            manageHp(num, 1, "subtract");
        });
        $(".heal").click(function() {
            let num = $(this).data("entity-num");
            manageHp(num, 1, "add");
        });
        $(".remove-mana").each(function() {
            let num = $(this).data("entity-num");
            let mana = $(".entity"+num).find('.mana');
            let mana_bar = $(".entity"+num).find('.mana-bar');
            let percent = mana.text().split("/")[0] / mana.text().split("/")[1] * 100;
            updateManaBar(mana_bar, percent);
        });

        $(".remove-mana").click(function() {
            let num = $(this).data("entity-num");
            managePm(num, 1, "subtract");
        });
        $(".add-mana").click(function() {
            let num = $(this).data("entity-num");
            managePm(num, 1, "add");
        });

        $("#note").val(getCookie("note"));

        $(".save-note").click(function() {
            setCookie("note", $("#note").val(), 365);
        });
        $('.modalSheetBtn').click(function() {
            let modal = $('#modalSheet');
            let id = $(this).data("entity-id");
            let type = $(this).data("entity-type");
            if (type == "player") {
                base_url = "{{ url('playersheet', {'id': 'tmp'}) }}";
            } else {
                base_url = "{{ url('creaturesheet', {'id': 'tmp'}) }}";
            }
            $.ajax({
            url: base_url.replace("tmp", id),
            success: function(data) {
                data = $(data).not('.navbar');
                $(data).find('#editBtn').attr('class', 'd-none');
                modal.find('.modal-body').html(data);
            }
            });
        });
    });
</script>
{% endblock %}
